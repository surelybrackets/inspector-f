name: On New Version Create Contanier and Run on new EC2
on:
  push:
    tags:
      - "v*"
env:
  TERRAFORM_VERSION: "0.12.15"
  REPO_NAME: "inspector-f"

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - name: Checkout Branch
      uses: actions/checkout@v2
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Install and Config Terraform
      run: |
        wget https://releases.hashicorp.com/terraform/${{ env.TERRAFORM_VERSION }}/terraform_${{ env.TERRAFORM_VERSION }}_linux_amd64.zip
        unzip terraform_${{ env.TERRAFORM_VERSION }}_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
        terraform -v

    - name: Install Node Dependencies
      run: npm ci
      
    - name: Build and start Container
      run: npm run start:prod
    
    - name: Publish to Registry
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker tag inspector-f ${{ secrets.DOCKER_USERNAME }}/${{ env.REPO_NAME }}
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.REPO_NAME }}
    
    - name: Start API on new EC2 Instance
      run: |
        cd ci
        terraform init
        terraform validate
        terraform apply -auto-approve -var "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" -var "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -var "docker_tag_version=$(echo $(git tag))" -var "docker_repo=${{ secrets.DOCKER_USERNAME }}"
        echo "api is now available at $(terraform output | cut -d' ' -f 3):8080"

  
